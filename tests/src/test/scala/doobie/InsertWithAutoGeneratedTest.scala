package doobie

import doobie.*
import doobie.implicits.*
import doobie.util.DBFixture
import doobie.util.Helpers
import munit.CatsEffectSuite

class InsertWithAutoGeneratedTest
    extends CatsEffectSuite
    with DBFixture
    with Helpers {
  val withTable = db.mapAsync { xa =>
    val io = for {
      _ <-
        sql"""create table $Cars (
          ${Cars.idCol} identity not null primary key,
          ${Cars.makeCol} varchar not null
        )""".update.run
    } yield ()

    io.transact(xa).as(xa).unsafeToFuture()
  }

  withTable.test("insert with auto-generated") { xa =>
    val data = Vector(
      Cars.RowWithoutAutogenerated("Ford"),
      Cars.RowWithoutAutogenerated("Mustang")
    )
    val insertWithIdsIO = Cars.RowWithoutAutogenerated.insert
      .updateManyWithGeneratedKeys(
        Cars.idCol
      )(data)
      .compile
      .to(Vector)
      .transact(xa)

    for {
      _ <- assertIO(insertWithIdsIO, Vector(1L, 2L))
      _ <- assertIO(
        Cars.Row.selectAll.to[Vector].transact(xa),
        Vector(
          Cars.Row(1L, "Ford"),
          Cars.Row(2L, "Mustang")
        )
      )
    } yield ()
  }
}
